{"version":3,"sources":["Panel/recentCalcs.js","Panel/Buttons/valButton.js","Panel/Buttons/opButton.js","Panel/Buttons/otherButton.js","Panel/calcPanel.js","App.js","reportWebVitals.js","index.js"],"names":["RecentCalcs","props","todo","operators","delegate","calc","val","state","fresh","setState","currentEq","isFresh","currentEqCopy","str","i","length","includes","charAt","isFloat","slice","addDec","addNum","ValButton","class","id","onClick","Op","plusMin","left","right","countDeficit","addPara","addOp","OpButton","op","ws","deficit","currentAns","evaluate","x","String","send","JSON","stringify","error","console","log","calculate","clear","allClear","OtherButton","CalcPanel","HOST","window","location","origin","replace","App","WebSocket","recentCalcs","this","onopen","onmessage","evt","message","parse","data","onclose","reverse","map","e","rows","value","reversed","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.8602dfc6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst RecentCalcs = props => {\r\n    return (\r\n        <li>{props.todo}</li>\r\n    );\r\n}\r\nexport default RecentCalcs;","import React from \"react\";\r\nimport './Button.css';\r\n\r\nconst operators = '*/-+.';\r\n\r\n//If value is freshly calculated, treat it as 0\r\nconst isFresh = (calc, val) => {\r\n    if (val==='.') {\r\n        calc.setState({currentEq:'0.', fresh:false});\r\n    }\r\n    else {\r\n        calc.setState({currentEq: val, fresh:false});\r\n    }\r\n}\r\n\r\n//Helper function to see if number is already a float\r\nconst isFloat = (str) => {\r\n    for (let i=str.length-1; i>=0; i--) {\r\n        if ((operators+\")\").includes(str.charAt(i))) {\r\n            return str.charAt(i)==='.';\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n//Add decimal, with rules for mathematical syntax. If needed, prepend 0 or *0.\r\nconst addDec = (calc, val) => {\r\n    let currentEqCopy = calc.state.currentEq;\r\n    if (!isFloat(currentEqCopy)) {\r\n        if (currentEqCopy.slice(-1)===')') {\r\n            currentEqCopy+='*0';\r\n        }\r\n        else if (currentEqCopy.length === 0 || (operators+'(').includes(currentEqCopy.slice(-1))) {\r\n            currentEqCopy+='0';\r\n        }\r\n        currentEqCopy+=val;\r\n    }\r\n    calc.setState({currentEq:currentEqCopy, fresh:false})\r\n}\r\n\r\n//Append a number, with rules for mathematical syntax. If needed, prepend *.\r\nconst addNum = (calc, val) => {\r\n    let currentEqCopy = calc.state.currentEq;\r\n    if (currentEqCopy.slice(-1) === '0' && (currentEqCopy.length === 0 || operators.includes(currentEqCopy.slice(-2, -1)))) {\r\n        currentEqCopy = currentEqCopy.slice(0, -1);\r\n    }\r\n    else if (currentEqCopy.slice(-1)===')') {\r\n        currentEqCopy+='*';\r\n    }\r\n    currentEqCopy+=val;\r\n    calc.setState({currentEq:currentEqCopy, fresh:false})\r\n}\r\n\r\n//Helper function to call the correct function\r\nconst delegate = (calc, val) => {\r\n    if (calc.state.fresh) {\r\n        isFresh(calc, val)\r\n    }\r\n    else if (val === '.') {\r\n        addDec(calc, val);\r\n    }\r\n    else {\r\n        addNum(calc, val);\r\n    }\r\n}\r\n\r\nconst ValButton = props => {\r\n    return (\r\n        <button class = 'CalcButton' id='ValButton' onClick = {() => delegate(props.calc, props.val)}>{props.val}</button>\r\n    );\r\n}\r\nexport default ValButton;","import React from \"react\";\r\nimport './Button.css';\r\n\r\nconst operators = '*/-+.';\r\n\r\n//Helper function to count defecit of parentheses.\r\nconst countDeficit = (str) => {\r\n    let left = 0;\r\n    let right = 0;\r\n    for (let i=0; i<str.length; i++) {\r\n        if (str.charAt(i)==='(') {\r\n            left++;\r\n        }\r\n        else if (str.charAt(i)===')') {\r\n            right++;\r\n        }\r\n    }\r\n    return left-right;\r\n}\r\n\r\n//Add plus or minus. If either is the most recent operator, change to the opposite. If before a different operator, prepend an opening parenthesis.\r\nconst plusMin = (calc) => {\r\n    let currentEqCopy = calc.state.currentEq;\r\n    for (let i=currentEqCopy.length-1; i>=0; i--) {\r\n        if ('-+'.includes(currentEqCopy.charAt(i))) {\r\n            currentEqCopy = currentEqCopy.slice(0, i) + (currentEqCopy.charAt(i) === '+' ? '-' : '+') + currentEqCopy.slice(i+1);\r\n            break;\r\n        }\r\n        else if (operators.slice(0, -1).includes(currentEqCopy.charAt(i))) {\r\n            currentEqCopy = currentEqCopy.slice(0, i+1) + \"(-\" + currentEqCopy.slice(i+1);\r\n            break;\r\n        }\r\n        else if (currentEqCopy.charAt(i)==='(' || currentEqCopy.charAt(i)===')') {\r\n            currentEqCopy = currentEqCopy.slice(0, i+1) + \"-\" + currentEqCopy.slice(i+1);\r\n            break;\r\n        }\r\n        else if (i===0) {\r\n            currentEqCopy = \"-\" + currentEqCopy;\r\n        }\r\n    }\r\n    calc.setState({currentEq:currentEqCopy, fresh:false})\r\n}\r\n\r\n//Add parenthesis. Only aim to close if there is a deficit. Then, only close if succeeding a number, otherwise open a new parenthesis. Prepend * if needed.\r\nconst addPara = (calc) => {\r\n    let currentEqCopy = calc.state.currentEq;\r\n    if (countDeficit(currentEqCopy)) {\r\n        if (currentEqCopy.slice(-1)==='(' || operators.includes(currentEqCopy.slice(-1))) {\r\n            if (currentEqCopy.slice(-1)==='.') {\r\n                currentEqCopy = currentEqCopy.slice(0, -1);\r\n                currentEqCopy = currentEqCopy+'*';\r\n            }\r\n            currentEqCopy = currentEqCopy+'(';\r\n        }\r\n        else {\r\n            currentEqCopy = currentEqCopy+')';\r\n        }\r\n    }\r\n    else {\r\n        if (currentEqCopy.slice(-1)==='.') {\r\n            currentEqCopy = currentEqCopy.slice(0, -1);\r\n        }\r\n        if (!operators.slice(0, -1).includes(currentEqCopy.slice(-1))) {\r\n            currentEqCopy = currentEqCopy+'*';\r\n        }\r\n        currentEqCopy = currentEqCopy+'(';\r\n    }\r\n    calc.setState({currentEq:currentEqCopy, fresh:false})\r\n}\r\n\r\n//Add an operator. Never have two back to back operators, or an operator immediately after an opening parenthesis. \r\nconst addOp = (calc, Op) => {\r\n    let currentEqCopy = calc.state.currentEq;\r\n    if (currentEqCopy.length !== 0 && currentEqCopy.slice(-1)!=='(' && !(currentEqCopy.slice(-2, -1)==='(' && operators.includes(currentEqCopy.slice(-1)))) {\r\n            if (operators.includes(currentEqCopy.slice(-1))) {\r\n                    currentEqCopy = currentEqCopy.slice(0, -1);\r\n            }\r\n            currentEqCopy += Op;\r\n    }\r\n    calc.setState({currentEq:currentEqCopy, fresh:false})\r\n}\r\n\r\n//Helper function to call the correct function\r\nconst delegate = (calc, Op) => {\r\n    if (Op === '+/-') {\r\n        plusMin(calc);\r\n    }\r\n    else if (Op === '()') {\r\n        addPara(calc);\r\n    }\r\n    else {\r\n        addOp(calc, Op);\r\n    }\r\n}\r\n\r\nconst OpButton = props => {\r\n    return (\r\n        <button class = 'CalcButton' id='OpButton' onClick = {() => delegate(props.calc, props.op)}>{props.op}</button>\r\n    );\r\n}\r\nexport default OpButton;","import React from \"react\";\r\nimport './Button.css';\r\nimport {evaluate} from 'mathjs';\r\n\r\nconst operators = '*/-+.';\r\n\r\n//Helper function to count defecit of parentheses.\r\nconst countDeficit = (str) => {\r\n    let left = 0;\r\n    let right = 0;\r\n    for (let i=0; i<str.length; i++) {\r\n        if (str.charAt(i)==='(') {\r\n            left++;\r\n        }\r\n        else if (str.charAt(i)===')') {\r\n            right++;\r\n        }\r\n    }\r\n    return left-right;\r\n}\r\n\r\n//Calculate current input and send to server\r\nconst calculate = (calc, ws) => {\r\n        let currentEqCopy = calc.state.currentEq;\r\n        if (!operators.includes(currentEqCopy.slice(-1)) && currentEqCopy.slice(-1)!=='(') {\r\n            let deficit = countDeficit(currentEqCopy)\r\n            for (let i = 0; i < deficit; i++) {\r\n                currentEqCopy += \")\";\r\n            }\r\n        }\r\n        //Evaluate using math.js. This should be more protected than eval(), input is controlled, and input is only ever evaluated locally. Should be safe?\r\n        try {\r\n            let currentAns = evaluate(currentEqCopy);\r\n            let x = {'recentCalc': currentEqCopy + '=' + String(currentAns)}\r\n            //If the calculation was successful, send it to the server to broadcast to everyone else.\r\n            try {\r\n                ws.send(JSON.stringify(x));\r\n            } catch(error) {\r\n                console.log(error)\r\n            }\r\n            calc.setState({currentEq: String(currentAns), fresh:true});\r\n        } catch {console.log(\"Invalid equation\")}\r\n}\r\n\r\n//Clear one entry\r\nconst clear = (calc) => {\r\n    let currentEqCopy = calc.state.currentEq;\r\n    currentEqCopy = currentEqCopy.slice(0, -1);\r\n    calc.setState({currentEq:currentEqCopy ? currentEqCopy : \"0\", fresh:false})\r\n}\r\n\r\n//Clear all entries\r\nconst allClear = (calc) => {\r\n    calc.setState({currentEq:\"0\", fresh:false})\r\n}\r\n\r\n//Helper function to call correct function\r\nconst delegate = (calc, op, ws) => {\r\n    if (op === '=') {\r\n        calculate(calc, ws);\r\n    }\r\n    else if (op === 'CE') {\r\n        clear(calc);\r\n    }\r\n    else {\r\n        allClear(calc);\r\n    }\r\n}\r\n\r\nconst OtherButton = props => {\r\n    return (\r\n        <button class = 'CalcButton' id='OtherButton' onClick = {() => delegate(props.calc, props.op, props.ws)}>{props.op}</button>\r\n    );\r\n}\r\nexport default OtherButton;","import React from \"react\";\r\nimport ValButton from './Buttons/valButton';\r\nimport OpButton from './Buttons/opButton';\r\nimport OtherButton from './Buttons/otherButton';\r\nimport './calcPanel.css';\r\n\r\nconst CalcPanel = props => {\r\n    return (\r\n        <div id=\"CalcPanel\">\r\n                <OtherButton calc={props.calc} op = {'AC'}/>\r\n                <OtherButton calc={props.calc} op = {'CE'}/>\r\n                <OpButton calc={props.calc} op = {'()'}/>\r\n                <OpButton calc={props.calc} op = {'/'}/>\r\n                <ValButton calc={props.calc} val = {'7'}/>\r\n                <ValButton calc={props.calc} val = {'8'}/>\r\n                <ValButton calc={props.calc} val = {'9'}/>\r\n                <OpButton calc={props.calc} op = {'*'}/>\r\n                <ValButton calc={props.calc} val = {'4'}/>\r\n                <ValButton calc={props.calc} val = {'5'}/>\r\n                <ValButton calc={props.calc} val = {'6'}/>\r\n                <OpButton calc={props.calc} op = {'-'}/>\r\n                <ValButton calc={props.calc} val = {'1'}/>\r\n                <ValButton calc={props.calc} val = {'2'}/>\r\n                <ValButton calc={props.calc} val = {'3'}/>\r\n                <OpButton calc={props.calc} op = {'+'}/>\r\n                <OpButton calc={props.calc} op = {'+/-'}/>\r\n                <ValButton calc={props.calc} val = {'0'}/>\r\n                <ValButton calc={props.calc} val = {'.'}/>\r\n                <OtherButton calc={props.calc} ws={props.ws} op = {'='}/>\r\n        </div>\r\n    );\r\n}\r\nexport default CalcPanel;","import './App.css';\nimport React, { Component } from 'react';\nimport RecentCalcs from './Panel/recentCalcs';\nimport CalcPanel from './Panel/calcPanel';\n\nconst HOST = window.location.origin.replace(/^http/, 'ws')\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            recentCalcs: [],\n            currentEq: \"0\",\n            fresh: true\n        };\n    }\n\n    //Create socket connection\n    ws = new WebSocket(HOST + '/ws');\n    componentDidMount() {\n        \n        //Send message on connection to request recentCalcs update\n        this.ws.onopen = () => {\n            this.ws.send(JSON.stringify({'open':'true'}))\n            console.log(\"connected\")\n        }\n\n        //Update recentCalcs upon broadcast\n        this.ws.onmessage = evt => {\n            const message = JSON.parse(evt.data)\n            if (message == null) {\n                this.setState({recentCalcs: []})\n            }\n            else {\n                this.setState({recentCalcs: message})\n            }\n        }\n\n        this.ws.onclose = () => {\n            console.log('disconnected')\n        }\n    }\n\n    render() {\n\n        //Build recent calculations list in reverse order\n        let recentCalcs = this.state.recentCalcs.slice(0).reverse().map((e) => {\n            return (\n                <RecentCalcs todo={e}/>\n            );\n        });\n        \n        return (\n            <div id=\"App\">\n                <div id=\"Calculator\">\n                    <div>\n                        <textarea rows=\"1\" id = \"displayBar\"  value = {this.state.currentEq}/>\n                    </div>\n                    <div>\n                        <CalcPanel id= \"calcPanel\" calc={this} ws={this.ws}/>\n                    </div>\n                </div>\n                <div id=\"RecentCalcs\">\n                    <div>\n                        <h3 id=\"RecentCalcsHeader\">Recent Calculations</h3>\n                        {this.state.recentCalcs.length === 0 ? \"No calculations yet!\" : <ul id=\"RecentCalcsList\" reversed>{recentCalcs}</ul>}\n                    </div>\n                    <div>\n                        {this.state.recentCalcs.length === 0 ? null : <button id=\"clearRecent\" onClick={() => {this.ws.send(JSON.stringify({'clear':'true'}))}}>Clear</button>}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}